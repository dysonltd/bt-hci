//! The representation of the external appearance of the device.
//!
//! https://www.bluetooth.com/wp-content/uploads/Files/Specification/Assigned_Numbers.html#bookmark49

// This file is auto-generated by the update_uuids application
// Based on https://bitbucket.org/bluetooth-SIG/public.git

#[allow(dead_code)]
mod categories;

pub use categories::*;

use super::BleUuid;

#[cfg(test)]
mod test {
    use sensor::HUMIDITY_SENSOR;

    use super::*;
    use crate::uuid::characteristic::SPORT_TYPE_FOR_AEROBIC_AND_ANAEROBIC_THRESHOLDS;

    #[test]
    fn test_appearance() {
        const CUSTOM_UUID: BleUuid = BleUuid::from_category(0x002, 0x007);
        assert_eq!(u16::from(CUSTOM_UUID), 0x0087);
        let uuid: u16 = SPORT_TYPE_FOR_AEROBIC_AND_ANAEROBIC_THRESHOLDS.into();
        assert_eq!(uuid, 0x2A93);
        const HUMIDITY_BYTES: [u8; 2] = HUMIDITY_SENSOR.to_le_bytes();
        assert_eq!(HUMIDITY_BYTES, [0x44, 0x05]);
        const GAMEPAD: BleUuid = power_device::GENERIC_POWER_DEVICE;
        assert_eq!(u16::from(GAMEPAD), 0x780);
    }
}
